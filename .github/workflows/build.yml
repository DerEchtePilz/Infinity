# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

# Copied from https://github.com/JorelAli/CommandAPI/blob/master/.github/workflows/build.yml and edited for own needs

name: build
on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        # os: [ubuntu-20.04, windows-2022]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:

      ### Set up ###

      - name: Checkout the Infinity repository
        uses: actions/checkout@v3

      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: gradle

      ### Compilation ###

      - name: Build Infinity using Gradle
        run: |
          chmod +x gradlew
          ./gradlew reobfJar --no-daemon

      # - name: Run tests
      #  run: |
      #    ./gradlew check

      ### Upload .jar artifacts ###

      - name: Query project version
        id: version_query
        run: echo "version=$(cd ./infinity-server; gradle properties --no-daemon --console=plain -q | grep '^version:' | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Upload Infinity plugin artifact
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Infinity
          path: build/libs/Infinity-${{ steps.version_query.outputs.version }}.jar